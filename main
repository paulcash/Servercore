package main;

import java.util.logging.Logger;

import org.spongepowered.api.Game;
import org.spongepowered.api.entity.Player;
import org.spongepowered.api.event.Subscribe;
import org.spongepowered.api.event.entity.EntitySpawnEvent;
import org.spongepowered.api.event.player.AsyncPlayerChatEvent;
import org.spongepowered.api.event.player.PlayerEvent;
import org.spongepowered.api.event.state.PreInitializationEvent;
import org.spongepowered.api.event.state.ServerStartedEvent;
import org.spongepowered.api.event.state.ServerStartingEvent;
import org.spongepowered.api.event.state.ServerStoppingEvent;
import org.spongepowered.api.plugin.Plugin;
import org.spongepowered.api.util.command.CommandCallable;


@Plugin(id = "Randomid", name = "ServerCore-Events", version="0.1")
public class main{

 
	
	Game game;
	Logger logger;
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
//Ahead is the code for the servercore chatbot	

	   @SuppressWarnings("unused")
	


@Subscribe
public void onChatEvent(AsyncPlayerChatEvent event) {
String message = event.getMessage();
Player player = event.getPlayer();
if(message.equalsIgnoreCase("Hello")) {
player.sendMessage("Hello");
} else if(message.contains("How do I get to the nether?")) {
player.sendMessage("Hello" + player.getName() + "! You need obsidian to build a nether portal! Mine to get obsidian!");
} else if(message.contains("help")) {
	       event.getPlayer().sendMessage("Hey " + event.getPlayer() + " How may i assist you?");
		   event.getPlayer().sendMessage("Need help with the nether? type (how do i get to the nether )in chat ");
		   event.getPlayer().sendMessage("About to die? type (heal) in chat ");
		   event.getPlayer().sendMessage("Want the server version? type (version) in chat");
		   event.getPlayer().sendMessage("type (Help me) to recieve kinda help");		   
		   event.getPlayer().sendMessage("Current Commands: ");
		   event.getPlayer().sendMessage("Current Commands: ");
		   event.getPlayer().sendMessage("Current Commands: ");
		   event.getPlayer().sendMessage("Current Commands: ");
		   event.getPlayer().sendMessage("Current Commands: ");
	   } else if(message.contains("heal")) {
		   player.setHealth(20);
	   } else if(message.contains("version")) {
		   player.sendMessage("Version " + event.getGame().getAPIVersion());
	   } else if(message.contains("chatbot")) {

	   event.getPlayer().sendMessage("What " + event.getPlayer() + " ??!");
	   } else if(message.contains("help me")) {
			event.getPlayer().sendMessage("What what happened Why are you yelling at me! Siriously take it up with the admin not the chatbot!");
	   } else if(message.contains("servercore")) {
		   player.sendMessage("Servercore version 0.5");

	   }
		   
		   
	   }
	   
	   @Subscribe
	    public void chatbo32214t2t(ServerStoppingEvent event) {
		   event.getGame().broadcastMessage("Great you broke it!");

				   
	
	   }
				   
   












@Subscribe
public void chatbo4264323532534513551614t2t(ServerStartingEvent event) {


	
	logger.info("Loading...");
	logger.info("[ServerCore] Running try events");
	logger.info("[Servercore] Version 1.0 has found sponge version: " + event.getGame().getAPIVersion() + " Trying to hook in...");
	logger.info("[Servercore] API  Has hooked in to sponge");

}




@Subscribe
public void chatbo426432353253451355161dfg4t2t(PreInitializationEvent event) {


	game = event.getGame();
	
	
	
	
	
	
}







@Subscribe
public void chatbo426432353q6432534513551614t2t(EntitySpawnEvent event) {







}





@Subscribe
public void onDisable(ServerStoppingEvent event) {

logger.info("ServerCore has been disabled");
}










@Subscribe
public void onDisab234le(ServerStartedEvent event) {

if(game.getPluginManager().getPlugins().contains("ServerCore"));
logger.info("ServerCore Loaded and working");

}



}





